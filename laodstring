local G2L = {}
local coinFarmActive = false
local afkEnabled = false
local bodyVelocity = nil
local noclipConnection = nil

-- ========== PERSISTENT GUI SETUP ========== --
local player = game:GetService("Players").LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Main GUI
local mainGui = Instance.new("ScreenGui", playerGui)
mainGui.Name = "MainGUI"
mainGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
mainGui.ResetOnSpawn = false -- Ensures GUI persists after respawn

-- Anti-AFK GUI
local afkGui = Instance.new("ScreenGui", playerGui)
afkGui.Name = "AntiAFK"
afkGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
afkGui.ResetOnSpawn = false -- Ensures GUI persists after respawn

-- ========== MAIN GUI CONSTRUCTION ========== --
local mainFrame = Instance.new("Frame", mainGui)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
mainFrame.Style = Enum.FrameStyle.RobloxRound
mainFrame.Size = UDim2.new(0, 272, 0, 383)
mainFrame.Position = UDim2.new(0.36689, 0, 0.29555, 0)
mainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.Name = "Main"

-- Make GUI draggable
local dragging
local dragInput
local dragStart
local startPos

local function updateInput(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)

-- [Rest of your GUI elements here...]

-- ========== NOClip Function ========== --
local function enableNoclip(character)
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end

local function disableNoclip(character)
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
end

-- ========== COIN FARM TOGGLE ========== --
local function toggleCoinFarm()
    coinFarmActive = not coinFarmActive
    coinButton.TextColor3 = coinFarmActive and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0)
    
    if coinFarmActive then
        -- Initialize farm
        local character = player.Character or player.CharacterAdded:Wait()
        local hrp = character:WaitForChild("HumanoidRootPart")
        
        -- Enable noclip
        noclipConnection = game:GetService("RunService").Stepped:Connect(function()
            enableNoclip(character)
        end)

        -- Movement control
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bodyVelocity.Parent = hrp

        -- Farm loop
        task.spawn(function()
            while coinFarmActive and character and hrp do
                -- Find all coins
                local coins = {}
                for _, coin in ipairs(workspace:GetDescendants()) do
                    if coin:IsA("MeshPart") and coin.Name == "MainCoin" then
                        table.insert(coins, coin)
                    end
                end

                -- Find the closest coin
                local closestCoin = nil
                local closestDistance = math.huge
                for _, coin in ipairs(coins) do
                    local distance = (hrp.Position - coin.Position).Magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestCoin = coin
                    end
                end

                -- Move toward the closest coin
                if closestCoin then
                    local direction = (closestCoin.Position - hrp.Position).Unit
                    bodyVelocity.Velocity = direction * 50 -- Adjust speed as needed
                else
                    bodyVelocity.Velocity = Vector3.zero
                end

                task.wait()
            end

            -- Cleanup when loop ends
            if bodyVelocity then
                bodyVelocity:Destroy()
                bodyVelocity = nil
            end
            if noclipConnection then
                noclipConnection:Disconnect()
                noclipConnection = nil
            end
            if character then
                disableNoclip(character)
            end
        end)
    else
        -- Cleanup
        if bodyVelocity then
            bodyVelocity:Destroy()
            bodyVelocity = nil
        end
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        if player.Character then
            disableNoclip(player.Character)
        end
    end
end

coinButton.MouseButton1Click:Connect(toggleCoinFarm)

-- ========== ANTI-AFK TOGGLE ========== --
afkButton.MouseButton1Click:Connect(function()
    if not afkEnabled then
        afkEnabled = true
        afkButton.TextColor3 = Color3.fromRGB(128, 0, 128)
        afkFrame.Visible = true
        
        -- Anti-AFK functionality
        local virtualUser = game:GetService("VirtualUser")
        player.Idled:Connect(function()
            virtualUser:CaptureController()
            virtualUser:ClickButton2(Vector2.new())
            afkStatus.Text = "Kicked AFK detection! Still active."
            task.wait(2)
            afkStatus.Text = "Status: Active"
        end)
    end
end)

-- ========== RESPAWN HANDLING ========== --
player.CharacterAdded:Connect(function(character)
    if coinFarmActive then
        -- Reinitialize farm components
        toggleCoinFarm() -- Force refresh
        toggleCoinFarm()
    end
end)
