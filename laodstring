local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Enable noclip but keep collision for coins
game:GetService("RunService").Stepped:Connect(function()
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            -- Enable collision only for the MainCoin parts
            if part.Name == "MainCoin" then
                part.CanCollide = true
            else
                part.CanCollide = false
                part.Velocity = Vector3.new() -- Optional: Reset velocity for smoother movement
            end
        end
    end
end)

local FLY_SPEED = 30
local ARRIVAL_THRESHOLD = 1
local visitedCoins = {}

local function forceMoveTo(targetPos)
    hrp.Velocity = Vector3.zero
    local startTime = tick()

    while (hrp.Position - targetPos).Magnitude > ARRIVAL_THRESHOLD do
        if tick() - startTime > 10 then -- Timeout after 10 seconds
            hrp.Velocity = Vector3.zero
            return false
        end
        hrp.Velocity = (targetPos - hrp.Position).Unit * FLY_SPEED
        task.wait()
    end

    hrp.Velocity = Vector3.zero
    return true
end

local function getCoins()
    local coins = {}
    for _, coin in ipairs(workspace:GetDescendants()) do
        if coin:IsA("MeshPart") and coin.Name == "MainCoin" and not visitedCoins[coin] then
            table.insert(coins, coin)
        end
    end
    return coins
end

local function getClosestCoin()
    local coins = getCoins()
    local closestCoin = nil
    local shortestDistance = math.huge

    for _, coin in ipairs(coins) do
        local distance = (hrp.Position - coin.Position).Magnitude
        if distance < shortestDistance then
            shortestDistance = distance
            closestCoin = coin
        end
    end

    return closestCoin
end

while true do
    local coin = getClosestCoin()
    
    if not coin then
        -- No coins left, check again after delay
        task.wait(5)
        continue
    end

    local targetPos = coin.Position
    if forceMoveTo(targetPos) then
        visitedCoins[coin] = true
        coin:Destroy()
    end

    task.wait(1)
end
