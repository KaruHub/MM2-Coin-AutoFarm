-- Load the Rayfield library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Initialize variables
local player = game:GetService("Players").LocalPlayer
local FLY_SPEED = 26
local ARRIVAL_THRESHOLD = 1
local visitedCoins = {}
local farming = false
local bodyVelocity

-- Function to initialize character movement
local function initializeCharacter(character)
    local hrp = character:WaitForChild("HumanoidRootPart")
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bodyVelocity.Velocity = Vector3.zero
    bodyVelocity.Parent = hrp
end

-- Function to move the character to a target position
local function forceMoveTo(targetPos)
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return false end
    local startTime = tick()
    while farming and (hrp.Position - targetPos).Magnitude > ARRIVAL_THRESHOLD do
        if tick() - startTime > 10 then
            bodyVelocity.Velocity = Vector3.zero
            return false
        end
        local direction = (targetPos - hrp.Position).Unit
        bodyVelocity.Velocity = direction * FLY_SPEED
        task.wait()
    end
    bodyVelocity.Velocity = Vector3.zero
    return true
end

-- Function to get uncollected coins
local function getCoins()
    local coins = {}
    for _, coin in ipairs(workspace:GetDescendants()) do
        if coin:IsA("MeshPart") and coin.Name == "MainCoin" and not visitedCoins[coin] then
            table.insert(coins, coin)
        end
    end
    return coins
end

-- Function to find the closest coin
local function getClosestCoin()
    local coins = getCoins()
    local closestCoin, shortestDistance = nil, math.huge
    for _, coin in ipairs(coins) do
        local distance = (player.Character.HumanoidRootPart.Position - coin.Position).Magnitude
        if distance < shortestDistance then
            shortestDistance, closestCoin = distance, coin
        end
    end
    return closestCoin
end

-- Coin farming loop
local function startFarming()
    while farming do
        local coin = getClosestCoin()
        if not coin then task.wait(5) continue end
        if forceMoveTo(coin.Position) then
            visitedCoins[coin] = true
            coin:Destroy()
        end
        task.wait(0.1)
    end
end

-- GUI
local Window = Rayfield:CreateWindow({
    Name = "Coin Farm",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- Create a custom folder for your hub/game
        FileName = "CoinFarmConfig"
    }
})

local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image

Tab:CreateToggle({
    Name = "Coin Farm",
    CurrentValue = false,
    Flag = "CoinFarmToggle", -- A flag is the identifier for the configuration file
    Callback = function(state)
        farming = state
        if farming then
            startFarming()
        end
    end
})

-- Handle character initialization
player.CharacterAdded:Connect(initializeCharacter)
if player.Character then
    initializeCharacter(player.Character)
end

-- Load the configuration
Rayfield:LoadConfiguration()
