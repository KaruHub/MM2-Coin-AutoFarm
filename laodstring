local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Enable noclip for the character
game:GetService("RunService").Stepped:Connect(function()
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
            part.Velocity = Vector3.zero
        end
    end
end)

local FLY_SPEED = 50 -- Increased speed for smoother movement
local ARRIVAL_THRESHOLD = 1
local visitedCoins = {}

-- Function to move the character to a target position
local function forceMoveTo(targetPos)
    local startTime = tick()

    while (hrp.Position - targetPos).Magnitude > ARRIVAL_THRESHOLD do
        if tick() - startTime > 10 then -- Timeout after 10 seconds
            hrp.Velocity = Vector3.zero
            return false
        end

        -- Calculate direction and move
        local direction = (targetPos - hrp.Position).Unit
        hrp.Velocity = direction * FLY_SPEED
        task.wait()
    end

    hrp.Velocity = Vector3.zero
    return true
end

-- Function to get all uncollected coins
local function getCoins()
    local coins = {}
    for _, coin in ipairs(workspace:GetDescendants()) do
        if coin:IsA("MeshPart") and coin.Name == "MainCoin" and not visitedCoins[coin] then
            table.insert(coins, coin)
        end
    end
    return coins
end

-- Function to find the closest coin
local function getClosestCoin()
    local coins = getCoins()
    local closestCoin = nil
    local shortestDistance = math.huge

    for _, coin in ipairs(coins) do
        local distance = (hrp.Position - coin.Position).Magnitude
        if distance < shortestDistance then
            shortestDistance = distance
            closestCoin = coin
        end
    end

    return closestCoin
end

-- Main loop to collect coins
while true do
    local coin = getClosestCoin()

    if not coin then
        -- No coins left, wait and check again
        task.wait(5)
        continue
    end

    -- Move to the coin
    local targetPos = coin.Position
    if forceMoveTo(targetPos) then
        visitedCoins[coin] = true
        coin:Destroy() -- Destroy the coin locally
    end

    task.wait(0.1) -- Small delay before checking for the next coin
end
